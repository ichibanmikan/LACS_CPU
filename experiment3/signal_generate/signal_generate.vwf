/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("add")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Cf")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Cf_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dl")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("fbus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("frl")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("frr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("halt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("in_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("inc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ir")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ir[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ir";
}

SIGNAL("ir[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ir";
}

SIGNAL("ir[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ir";
}

SIGNAL("ir[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ir";
}

SIGNAL("ir[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ir";
}

SIGNAL("ir[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ir";
}

SIGNAL("ir[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ir";
}

SIGNAL("ir[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ir";
}

SIGNAL("jc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("jmp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("jz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ld")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ldpc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("m")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("madd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("madd[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "madd";
}

SIGNAL("madd[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "madd";
}

SIGNAL("mov1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("mov2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("mov3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nop")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("not1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("or1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("out1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("out_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ra")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ra[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ra";
}

SIGNAL("ra[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ra";
}

SIGNAL("rsl")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("rsr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("s")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("s[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s";
}

SIGNAL("s[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s";
}

SIGNAL("s[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s";
}

SIGNAL("s[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "s";
}

SIGNAL("sm")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Sm_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("wa")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("wa[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "wa";
}

SIGNAL("wa[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "wa";
}

SIGNAL("we")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("xl")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Zf")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Zf_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("add")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("Cf")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("Cf_en")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("dl")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("fbus")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("frl")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("frr")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("halt")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("in1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("in_en")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("inc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ir[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("ir[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("ir[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("ir[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("ir[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("ir[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("ir[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("ir[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("jc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("jmp")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("jz")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("ld")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ldpc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("m")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("madd[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("madd[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("mov1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("mov2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("mov3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("nop")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("not1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("or1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("out1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("out_en")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("ra[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("ra[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
	}
}

TRANSITION_LIST("rsl")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("rsr")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("s[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
	}
}

TRANSITION_LIST("s[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("s[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("s[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("sm")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("Sm_en")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("sub")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("wa[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("wa[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("we")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("xl")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Zf")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 45.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("Zf_en")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "add";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Cf";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Cf_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dl";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "fbus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "frl";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "frr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "halt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "in_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "inc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ir";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "ir[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ir[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ir[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ir[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ir[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ir[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ir[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "ir[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "jc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "jmp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "jz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ld";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ldpc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "m";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "madd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
	CHILDREN = 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "madd[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "madd[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 26;
}

DISPLAY_LINE
{
	CHANNEL = "mov1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "mov2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "mov3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nop";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "not1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "or1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "out_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ra";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
	CHILDREN = 38, 39;
}

DISPLAY_LINE
{
	CHANNEL = "ra[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "ra[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "rsl";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rsr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
	CHILDREN = 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "s[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "s[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "s[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "s[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "sm";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Sm_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "wa";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
	CHILDREN = 51, 52;
}

DISPLAY_LINE
{
	CHANNEL = "wa[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "wa[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 50;
}

DISPLAY_LINE
{
	CHANNEL = "we";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "xl";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Zf";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Zf_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 26550;
	MASTER = TRUE;
}
;
